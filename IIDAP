<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>運動プログラム選択 - 症状に応じた運動コースの提案</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f8f9fa; }
        h1 { color: #007bff; }
        .form-group { margin-bottom: 20px; }
        label { font-weight: bold; margin-bottom: 5px; display: block; }
        .radio-group { display: flex; gap: 10px; margin-top: 5px; }
        .radio-group label { font-weight: normal; }
        .button-container { margin-top: 20px; }
        button { padding: 10px 15px; background-color: #007bff; color: white; border: none; cursor: pointer; }
        button:hover { background-color: #0056b3; }
        #program-suggestion { margin-top: 20px; }
        #exercise-count { margin-top: 10px; font-weight: bold; }
    </style>
    <script>
    async function getUserCount(userId) {
        try {
            const response = await fetch(`https://script.google.com/macros/s/AKfycbwt4C9BB2ohyoYiPNq9moCOa4of-WGdLFrE1TBSRs4b7AI7Xz_eQNiCFxquRlkzlCT3/exec?userId=${userId}`);
            
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        
        const data = await response.json();
        return data.count || 1;
    } catch (error) {
        console.error("カウントデータの取得中にエラーが発生しました:", error);
        
        // エラー時の代替処理: 必要に応じて設定
        return 1;
    }
}

        async function suggestAndSubmit(event) {
            event.preventDefault();

            const userId = document.getElementById("userId").value;
            const count = parseInt(document.getElementById("userCount").value);
            const userCount = parseInt(document.getElementById("userCount").value); // カウント値の取得
            if (!userId || isNaN(count)) {
                alert("ユーザーIDとカウントを入力してください。");
                return;
            }

            const symptoms = [
                document.querySelector('input[name="fatigue"]:checked').value,
                document.querySelector('input[name="muscle_pain"]:checked').value,
                document.querySelector('input[name="breathlessness"]:checked').value
            ];

            // 3. 提案機能（コースをカウントに基づいて設定）
            let course;
            if (count >= 1 && count <= 3) {
                course = 1;
            } else if (count >= 4 && count <= 6) {
                course = 2;
            } else if (count >= 7 && count <= 9) {
                course = 3;
            } else if (count >= 10 && count <= 12) {
                course = 4;
            } else if (count >= 13 && count <= 15) {
                course = 5;
            } else {
                course = 6;
            }

            let stopExercise = false;
            symptoms.forEach(value => {
                if (value === '重度') {
                    stopExercise = true;
                } else if (value === '中程度') {
                    course = Math.max(course - 2, 1);
                } else if (value === '軽度') {
                    course = Math.max(course - 1, 1);
                }
            });

            const programSuggestion = document.getElementById('program-suggestion');
            if (stopExercise) {
                programSuggestion.innerHTML = "運動中止が推奨されます。体調を整えてから再開しましょう。";
            } else {
                const courseLinks = {
                    1: "https://forms.gle/5U6NiNpwS5zwpBhdA",
                    2: "https://forms.gle/SwrqqV44AddakW3E7",
                    3: "https://forms.gle/ZrLYJJnHHigH1wuC7",
                    4: "https://forms.gle/WoSL5G6CxAYR7Mvs6",
                    5: "https://forms.gle/VGwBYdtgL2D8GXSE9",
                    6: "https://forms.gle/rc1dBT3chiJEQdZo8"
                };
                programSuggestion.innerHTML = `推奨される運動コース: コース ${course} <br><a href="${courseLinks[course]}" target="_blank">コース${course}の詳細はこちら</a>`;
            }

        
            // 1. データ送信機能
            try {
                const exerciseDateData = {
                    type: "exercise_date",
                    userId: userId,
                    userCount: userCount,
                    fatigue: symptoms[0],
                    muscle_pain: symptoms[1],
                    breathlessness: symptoms[2],
                    suggestedCourse: course // 計算されたコース番号を送信
                };
                await fetch("https://script.google.com/macros/s/AKfycbwt4C9BB2ohyoYiPNq9moCOa4of-WGdLFrE1TBSRs4b7AI7Xz_eQNiCFxquRlkzlCT3/exec", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    mode: "no-cors",
                    body: JSON.stringify(exerciseDateData)
                });             

            } catch (error) {
                console.error("データ送信中にエラーが発生しました:", error);
                alert("データ送信中にエラーが発生しました。");
                return;
            }
        }
    </script>
</head>
<body>

    <h1>運動プログラム選択</h1>
    <p>今日の体調や症状に応じた運動プログラムを提案し、データを送信します。以下の症状がある場合は選択してください。</p>

    <!-- ユーザーID入力欄 -->
    <div class="form-group">
        <label for="userId">ユーザーID:</label>
        <input type="text" id="userId" placeholder="ユーザーIDを入力してください" required>
    </div>

    <!-- カウント入力欄 -->
    <div class="form-group">
        <label for="userCount">運動プログラムを行うのは何回目か入力してください:</label>
        <input type="number" id="userCount" placeholder="運動プログラムを行うのは何回目か入力してください" required>
    </div>

    <!-- フォーム -->
    <form id="suggestForm" onsubmit="suggestAndSubmit(event)">
        <!-- 疲労感 -->
        <div class="form-group">
            <label>疲労感:</label>
            <div class="radio-group">
                <input type="radio" id="fatigue_none" name="fatigue" value="なし" required>
                <label for="fatigue_none">なし</label>
                <input type="radio" id="fatigue_mild" name="fatigue" value="軽度">
                <label for="fatigue_mild">軽度</label>
                <input type="radio" id="fatigue_moderate" name="fatigue" value="中程度">
                <label for="fatigue_moderate">中程度</label>
                <input type="radio" id="fatigue_severe" name="fatigue" value="重度">
                <label for="fatigue_severe">重度</label>
            </div>
        </div>

        <!-- 筋肉痛 -->
        <div class="form-group">
            <label>筋肉痛:</label>
            <div class="radio-group">
                <input type="radio" id="muscle_pain_none" name="muscle_pain" value="なし" required>
                <label for="muscle_pain_none">なし</label>
                <input type="radio" id="muscle_pain_mild" name="muscle_pain" value="軽度">
                <label for="muscle_pain_mild">軽度</label>
                <input type="radio" id="muscle_pain_moderate" name="muscle_pain" value="中程度">
                <label for="muscle_pain_moderate">中程度</label>
                <input type="radio" id="muscle_pain_severe" name="muscle_pain" value="重度">
                <label for="muscle_pain_severe">重度</label>
            </div>
        </div>

        <!-- 息切れ -->
        <div class="form-group">
            <label>息切れ:</label>
            <div class="radio-group">
                <input type="radio" id="breathlessness_none" name="breathlessness" value="なし" required>
                <label for="breathlessness_none">なし</label>
                <input type="radio" id="breathlessness_mild" name="breathlessness" value="軽度">
                <label for="breathlessness_mild">軽度</label>
                <input type="radio" id="breathlessness_moderate" name="breathlessness" value="中程度">
                <label for="breathlessness_moderate">中程度</label>
                <input type="radio" id="breathlessness_severe" name="breathlessness" value="重度">
                <label for="breathlessness_severe">重度</label>
            </div>
        </div>

        <!-- 提案とデータ送信ボタン -->
        <div class="button-container">
            <button type="submit">運動コースを提案して送信</button>
        </div>
    </form>

    <!-- 提案結果表示エリア -->
    <div id="program-suggestion"></div>
    <p id="exercise-count"></p>

</body>
</html>
